<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>CoreXT</AssemblyName>
    <PackageId>CoreXT</PackageId>
    <!--<NetStandardImplicitPackageVersion>1.6.1</NetStandardImplicitPackageVersion>-->
    <PackageTargetFallback>$(PackageTargetFallback);dnxcore50</PackageTargetFallback>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
    <Authors>Catmedis</Authors>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <Copyright>Catmedis</Copyright>
    <PackageLicenseUrl>https://creativecommons.org/licenses/by-sa/4.0/</PackageLicenseUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>CoreXT AspNet WebApi MVC</PackageTags>
    <NeutralLanguage>en-CA</NeutralLanguage>
    <PackageReleaseNotes />
    <PackageProjectUrl>https://www.nuget.org</PackageProjectUrl>
    <Description>Various framework elements and components to help make the development of .Net Standard applications and ASP.Net Core MVC websites that much easier to deal with. To see all assemblies in the framework, click the 'CoreXT' tag.

This package holds various basic utilities and extension methods for convenience.  For example, adds a '.Value(key, defaultValue)' method to easily pull out values from dictionaries, or '{string}.ND(defaultValue)' (null to default) for string values, async Task extensions, ObservableDictionary, WeakReferenceList, basic encryption, basic zip file support,, text parser,  'GetFullErrorMessage()' for writing out exceptions for debugging, and much more.</Description>
    <Version>1.0.7-beta</Version>
    <FileVersion>1.0.7.165</FileVersion>
    <AssemblyVersion>1.0.7.165</AssemblyVersion>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    <IncludeContentInPack>false</IncludeContentInPack>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MSBump" Version="2.3.2" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.0.4" />
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
    <PackageReference Include="System.Diagnostics.Process" Version="4.3.0" />
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="REM xcopy /Y /D &quot;$(ProjectDir)bin\$(ConfigurationName)\*.nupkg&quot; &quot;$(SolutionDir)Nuget\$(ConfigurationName)\&quot;&#xD;&#xA;if &quot;$(SolutionName)&quot;==&quot;CDS with CoreXT&quot; goto :EOF&#xD;&#xA;set dirpath=&quot;C:\Users\%USERNAME%\.nuget\packages\$(TargetName)&quot;&#xD;&#xA;if exist %dirpath% rd /S /Q %dirpath%" />
  </Target>

  <Target Name="PushPackage" AfterTargets="Pack">
    <Exec Command="dotnet nuget push &quot;$(MSBuildProjectDirectory)\bin\$(Configuration)\$(AssemblyName).$(Version).nupkg&quot; -s &quot;C:\Data\Visual Studio\Nuget Server\$(Configuration)&quot;" />
  </Target>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="del /s /q /f &quot;$(ProjectDir)bin\*.nupkg&quot;&#xD;&#xA;if exist &quot;C:\Data\Visual Studio\Nuget Server\$(Configuration)&quot; del /q &quot;C:\Data\Visual Studio\Nuget Server\$(Configuration)\CoreXT.*.nupkg&quot;&#xD;&#xA;" />
  </Target>

</Project>
