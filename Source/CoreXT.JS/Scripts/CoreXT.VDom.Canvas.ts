/*
 * CoreXT (CoreXT.com), (c) Twigate.com
 * License: http://creativecommons.org/licenses/by-nc/4.0/
 * (see CoreXT.ts for more details)
 *
 * Description: VDOM (Virtual DOM) is, as the name suggests, a virtual DOM used in the web workers and remote servers, which don't usually have UIs.
 *
 * Purpose: To provide a secure way to protected users from malicious applications.  Applications running in a web worker are untrusted by
 *          default (sandboxed). A user may, at their own risk, elevate an application to "trusted", and allow it to run in the core
 *          context.  This is required for most system related modules.
 *          The VDOM also acts as a virtual object graph, like that which is use with some game libraries/frameworks.  It allows remotely tracking
 *          and updating objects.  Any lag between a worker and the UI can be seen as "network lag" (typically in ms).  Developing an application
 *          with VDOM allows one to develop server side logic at the same time - using the same code base!  This basically makes websites act like
 *          "games", where the server side controls the main logic, and the client side simply updates the view and transmits UI events as needed.
 *
 * OpenGL Quick Reference: http://www.khronos.org/files/webgl/webgl-reference-card-1_0.pdf
 */

namespace CoreXT {
    export interface IHTMLCanvasElement extends HTMLCanvasElement { }
    export interface ICanvasRenderingContext2D extends CanvasRenderingContext2D { }
    export interface IWebGLRenderingContext extends WebGLRenderingContext { }

    export module VDOM {
        export class CanvasRenderingContext2D {
            canvas: IHTMLCanvasElement;

            constructor(canvas: Canvas) {
                Object.defineProperty(this, "canvas", { configurable: false, enumerable: true, writable: false, value: canvas });
            }


            miterLimit: number;
            font: string;
            globalCompositeOperation: string;
            msFillRule: string;
            lineCap: string;
            msImageSmoothingEnabled: boolean;
            lineDashOffset: number;
            shadowColor: string;
            lineJoin: string;
            shadowOffsetX: number;
            lineWidth: number;
            strokeStyle: any;
            globalAlpha: number;
            shadowOffsetY: number;
            fillStyle: any;
            shadowBlur: number;
            textAlign: string;
            textBaseline: string;

            restore(): void;
            setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;
            save(): void;
            arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;
            measureText(text: string): TextMetrics;
            isPointInPath(x: number, y: number, fillRule?: string): boolean;
            quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;
            putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): void;
            rotate(angle: number): void;
            fillText(text: string, x: number, y: number, maxWidth?: number): void;
            translate(x: number, y: number): void;
            scale(x: number, y: number): void;
            createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;
            lineTo(x: number, y: number): void;
            getLineDash(): Array<number>;
            fill(fillRule?: string): void;
            createImageData(imageDataOrSw: any, sh?: number): ImageData;
            createPattern(image: HTMLElement, repetition: string): CanvasPattern;
            closePath(): void;
            rect(x: number, y: number, w: number, h: number): void;
            clip(fillRule?: string): void;
            clearRect(x: number, y: number, w: number, h: number): void;
            moveTo(x: number, y: number): void;
            getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;
            fillRect(x: number, y: number, w: number, h: number): void;
            bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;
            drawImage(image: HTMLElement, offsetX: number, offsetY: number, width?: number, height?: number, canvasOffsetX?: number, canvasOffsetY?: number, canvasImageWidth?: number, canvasImageHeight?: number): void;
            transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;
            stroke(): void;
            strokeRect(x: number, y: number, w: number, h: number): void;
            setLineDash(segments: Array<number>): void;
            strokeText(text: string, x: number, y: number, maxWidth?: number): void;
            beginPath(): void;
            arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;
            createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;
        }

        // Default Values (all other properties are undefined)
        defineProperty(CanvasRenderingContext2D.prototype, "fillStyle", "#000000");
        defineProperty(CanvasRenderingContext2D.prototype, "font", "10px sans-serif");
        defineProperty(CanvasRenderingContext2D.prototype, "globalAlpha", 1);
        defineProperty(CanvasRenderingContext2D.prototype, "globalCompositeOperation", "source-over");
        defineProperty(CanvasRenderingContext2D.prototype, "imageSmoothingEnabled:", true);
        defineProperty(CanvasRenderingContext2D.prototype, "lineCap", "butt");
        defineProperty(CanvasRenderingContext2D.prototype, "lineDashOffset", 0);
        defineProperty(CanvasRenderingContext2D.prototype, "lineJoin", "miter");
        defineProperty(CanvasRenderingContext2D.prototype, "lineWidth", 1);
        defineProperty(CanvasRenderingContext2D.prototype, "miterLimit", 10);
        defineProperty(CanvasRenderingContext2D.prototype, "shadowBlur", 0);
        defineProperty(CanvasRenderingContext2D.prototype, "shadowColor", "rgba(0, 0, 0, 0)");
        defineProperty(CanvasRenderingContext2D.prototype, "shadowOffsetX", 0);
        defineProperty(CanvasRenderingContext2D.prototype, "shadowOffsetY", 0);
        defineProperty(CanvasRenderingContext2D.prototype, "strokeStyle", "#000000");
        defineProperty(CanvasRenderingContext2D.prototype, "textAlign", "start");
        defineProperty(CanvasRenderingContext2D.prototype, "textBaseline", "alphabetic");
        defineProperty(CanvasRenderingContext2D.prototype, "webkitImageSmoothingEnabled", true);

        export class WebGLRenderingContext {
            canvas: IHTMLCanvasElement;

            get drawingBufferWidth(): number {
                return this.$__drawingBufferWidth;
            }
            private $__drawingBufferWidth: number;

            get drawingBufferHeight(): number {
                return this.$__drawingBufferHeight;
            }
            private $__drawingBufferHeight: number;

            constructor(canvas: Canvas) {
                Object.defineProperty(this, "canvas", { configurable: false, enumerable: true, writable: false, value: canvas});
                this.$__drawingBufferWidth = canvas.width;
                this.$__drawingBufferHeight = canvas.height;
            }

            viewport(x: number, y: number, width: number, height: number): void {
                this.$__drawingBufferWidth = width;
                this.$__drawingBufferHeight = height;
            }

            getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation;
            bindTexture(target: number, texture: WebGLTexture): void;
            bufferData(target: number, data: ArrayBufferView, usage: number): void;
            bufferData(target: number, data: ArrayBuffer, usage: number): void;
            bufferData(target: number, size: number, usage: number): void;
            depthMask(flag: boolean): void;
            getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
            vertexAttrib3fv(indx: number, values: number[]): void;
            vertexAttrib3fv(indx: number, values: Float32Array): void;
            linkProgram(program: WebGLProgram): void;
            getSupportedExtensions(): string[];
            bufferSubData(target: number, offset: number, data: ArrayBuffer): void;
            bufferSubData(target: number, offset: number, data: ArrayBufferView): void;
            vertexAttribPointer(indx: number, size: number, type: number, normalized: boolean, stride: number, offset: number): void;
            polygonOffset(factor: number, units: number): void;
            blendColor(red: number, green: number, blue: number, alpha: number): void;
            createTexture(): WebGLTexture;
            hint(target: number, mode: number): void;
            getVertexAttrib(index: number, pname: number): any;
            enableVertexAttribArray(index: number): void;
            depthRange(zNear: number, zFar: number): void;
            cullFace(mode: number): void;
            createFramebuffer(): WebGLFramebuffer;
            uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: number[]): void;
            uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array): void;
            framebufferTexture2D(target: number, attachment: number, textarget: number, texture: WebGLTexture, level: number): void;
            deleteFramebuffer(framebuffer: WebGLFramebuffer): void;
            colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean): void;
            compressedTexImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, data: ArrayBufferView): void;
            uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: number[]): void;
            uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array): void;
            getExtension(name: string): Object;
            createProgram(): WebGLProgram;
            deleteShader(shader: WebGLShader): void;
            getAttachedShaders(program: WebGLProgram): WebGLShader[];
            enable(cap: number): void;
            blendEquation(mode: number): void;
            texImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, format: number, type: number, pixels: ArrayBufferView): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, image: HTMLImageElement): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, canvas: HTMLCanvasElement): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, video: HTMLVideoElement): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, pixels: ImageData): void;
            createBuffer(): WebGLBuffer;
            deleteTexture(texture: WebGLTexture): void;
            useProgram(program: WebGLProgram): void;
            vertexAttrib2fv(indx: number, values: number[]): void;
            vertexAttrib2fv(indx: number, values: Float32Array): void;
            checkFramebufferStatus(target: number): number;
            frontFace(mode: number): void;
            getBufferParameter(target: number, pname: number): any;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, image: HTMLImageElement): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, canvas: HTMLCanvasElement): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, video: HTMLVideoElement): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, pixels: ImageData): void;
            copyTexImage2D(target: number, level: number, internalformat: number, x: number, y: number, width: number, height: number, border: number): void;
            getVertexAttribOffset(index: number, pname: number): number;
            disableVertexAttribArray(index: number): void;
            blendFunc(sfactor: number, dfactor: number): void;
            drawElements(mode: number, count: number, type: number, offset: number): void;
            isFramebuffer(framebuffer: WebGLFramebuffer): boolean;
            uniform3iv(location: WebGLUniformLocation, v: number[]): void;
            uniform3iv(location: WebGLUniformLocation, v: Int32Array): void;
            lineWidth(width: number): void;
            getShaderInfoLog(shader: WebGLShader): string;
            getTexParameter(target: number, pname: number): any;
            getParameter(pname: number): any;
            getShaderPrecisionFormat(shadertype: number, precisiontype: number): WebGLShaderPrecisionFormat;
            getContextAttributes(): WebGLContextAttributes;
            vertexAttrib1f(indx: number, x: number): void;
            bindFramebuffer(target: number, framebuffer: WebGLFramebuffer): void;
            compressedTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, data: ArrayBufferView): void;
            isContextLost(): boolean;
            uniform1iv(location: WebGLUniformLocation, v: number[]): void;
            uniform1iv(location: WebGLUniformLocation, v: Int32Array): void;
            getRenderbufferParameter(target: number, pname: number): any;
            uniform2fv(location: WebGLUniformLocation, v: number[]): void;
            uniform2fv(location: WebGLUniformLocation, v: Float32Array): void;
            isTexture(texture: WebGLTexture): boolean;
            getError(): number;
            shaderSource(shader: WebGLShader, source: string): void;
            deleteRenderbuffer(renderbuffer: WebGLRenderbuffer): void;
            stencilMask(mask: number): void;
            bindBuffer(target: number, buffer: WebGLBuffer): void;
            getAttribLocation(program: WebGLProgram, name: string): number;
            uniform3i(location: WebGLUniformLocation, x: number, y: number, z: number): void;
            blendEquationSeparate(modeRGB: number, modeAlpha: number): void;
            clear(mask: number): void;
            blendFuncSeparate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void;
            stencilFuncSeparate(face: number, func: number, ref: number, mask: number): void;
            readPixels(x: number, y: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView): void;
            scissor(x: number, y: number, width: number, height: number): void;
            uniform2i(location: WebGLUniformLocation, x: number, y: number): void;
            getActiveAttrib(program: WebGLProgram, index: number): WebGLActiveInfo;
            getShaderSource(shader: WebGLShader): string;
            generateMipmap(target: number): void;
            bindAttribLocation(program: WebGLProgram, index: number, name: string): void;
            uniform1fv(location: WebGLUniformLocation, v: number[]): void;
            uniform1fv(location: WebGLUniformLocation, v: Float32Array): void;
            uniform2iv(location: WebGLUniformLocation, v: number[]): void;
            uniform2iv(location: WebGLUniformLocation, v: Int32Array): void;
            stencilOp(fail: number, zfail: number, zpass: number): void;
            uniform4fv(location: WebGLUniformLocation, v: number[]): void;
            uniform4fv(location: WebGLUniformLocation, v: Float32Array): void;
            vertexAttrib1fv(indx: number, values: number[]): void;
            vertexAttrib1fv(indx: number, values: Float32Array): void;
            flush(): void;
            uniform4f(location: WebGLUniformLocation, x: number, y: number, z: number, w: number): void;
            deleteProgram(program: WebGLProgram): void;
            isRenderbuffer(renderbuffer: WebGLRenderbuffer): boolean;
            uniform1i(location: WebGLUniformLocation, x: number): void;
            getProgramParameter(program: WebGLProgram, pname: number): any;
            getActiveUniform(program: WebGLProgram, index: number): WebGLActiveInfo;
            stencilFunc(func: number, ref: number, mask: number): void;
            pixelStorei(pname: number, param: number): void;
            disable(cap: number): void;
            vertexAttrib4fv(indx: number, values: number[]): void;
            vertexAttrib4fv(indx: number, values: Float32Array): void;
            createRenderbuffer(): WebGLRenderbuffer;
            isBuffer(buffer: WebGLBuffer): boolean;
            stencilOpSeparate(face: number, fail: number, zfail: number, zpass: number): void;
            getFramebufferAttachmentParameter(target: number, attachment: number, pname: number): any;
            uniform4i(location: WebGLUniformLocation, x: number, y: number, z: number, w: number): void;
            sampleCoverage(value: number, invert: boolean): void;
            depthFunc(func: number): void;
            texParameterf(target: number, pname: number, param: number): void;
            vertexAttrib3f(indx: number, x: number, y: number, z: number): void;
            drawArrays(mode: number, first: number, count: number): void;
            texParameteri(target: number, pname: number, param: number): void;
            vertexAttrib4f(indx: number, x: number, y: number, z: number, w: number): void;
            getShaderParameter(shader: WebGLShader, pname: number): any;
            clearDepth(depth: number): void;
            activeTexture(texture: number): void;
            detachShader(program: WebGLProgram, shader: WebGLShader): void;
            uniform1f(location: WebGLUniformLocation, x: number): void;
            uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: number[]): void;
            uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array): void;
            deleteBuffer(buffer: WebGLBuffer): void;
            copyTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number): void;
            uniform3fv(location: WebGLUniformLocation, v: number[]): void;
            uniform3fv(location: WebGLUniformLocation, v: Float32Array): void;
            stencilMaskSeparate(face: number, mask: number): void;
            attachShader(program: WebGLProgram, shader: WebGLShader): void;
            compileShader(shader: WebGLShader): void;
            clearColor(red: number, green: number, blue: number, alpha: number): void;
            isShader(shader: WebGLShader): boolean;
            clearStencil(s: number): void;
            framebufferRenderbuffer(target: number, attachment: number, renderbuffertarget: number, renderbuffer: WebGLRenderbuffer): void;
            finish(): void;
            uniform2f(location: WebGLUniformLocation, x: number, y: number): void;
            renderbufferStorage(target: number, internalformat: number, width: number, height: number): void;
            uniform3f(location: WebGLUniformLocation, x: number, y: number, z: number): void;
            getProgramInfoLog(program: WebGLProgram): string;
            validateProgram(program: WebGLProgram): void;
            isEnabled(cap: number): boolean;
            vertexAttrib2f(indx: number, x: number, y: number): void;
            isProgram(program: WebGLProgram): boolean;
            createShader(type: number): WebGLShader;
            bindRenderbuffer(target: number, renderbuffer: WebGLRenderbuffer): void;
            uniform4iv(location: WebGLUniformLocation, v: number[]): void;
            uniform4iv(location: WebGLUniformLocation, v: Int32Array): void;

            // Constants
            DEPTH_FUNC: number;
            DEPTH_COMPONENT16: number;
            REPLACE: number;
            REPEAT: number;
            VERTEX_ATTRIB_ARRAY_ENABLED: number;
            FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;
            STENCIL_BUFFER_BIT: number;
            RENDERER: number;
            STENCIL_BACK_REF: number;
            TEXTURE26: number;
            RGB565: number;
            DITHER: number;
            CONSTANT_COLOR: number;
            GENERATE_MIPMAP_HINT: number;
            POINTS: number;
            DECR: number;
            INT_VEC3: number;
            TEXTURE28: number;
            ONE_MINUS_CONSTANT_ALPHA: number;
            BACK: number;
            RENDERBUFFER_STENCIL_SIZE: number;
            UNPACK_FLIP_Y_WEBGL: number;
            BLEND: number;
            TEXTURE9: number;
            ARRAY_BUFFER_BINDING: number;
            MAX_VIEWPORT_DIMS: number;
            INVALID_FRAMEBUFFER_OPERATION: number;
            TEXTURE: number;
            TEXTURE0: number;
            TEXTURE31: number;
            TEXTURE24: number;
            HIGH_INT: number;
            RENDERBUFFER_BINDING: number;
            BLEND_COLOR: number;
            FASTEST: number;
            STENCIL_WRITEMASK: number;
            ALIASED_POINT_SIZE_RANGE: number;
            TEXTURE12: number;
            DST_ALPHA: number;
            BLEND_EQUATION_RGB: number;
            FRAMEBUFFER_COMPLETE: number;
            NEAREST_MIPMAP_NEAREST: number;
            VERTEX_ATTRIB_ARRAY_SIZE: number;
            TEXTURE3: number;
            DEPTH_WRITEMASK: number;
            CONTEXT_LOST_WEBGL: number;
            INVALID_VALUE: number;
            TEXTURE_MAG_FILTER: number;
            ONE_MINUS_CONSTANT_COLOR: number;
            ONE_MINUS_SRC_ALPHA: number;
            TEXTURE_CUBE_MAP_POSITIVE_Z: number;
            NOTEQUAL: number;
            ALPHA: number;
            DEPTH_STENCIL: number;
            MAX_VERTEX_UNIFORM_VECTORS: number;
            DEPTH_COMPONENT: number;
            RENDERBUFFER_RED_SIZE: number;
            TEXTURE20: number;
            RED_BITS: number;
            RENDERBUFFER_BLUE_SIZE: number;
            SCISSOR_BOX: number;
            VENDOR: number;
            FRONT_AND_BACK: number;
            CONSTANT_ALPHA: number;
            VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;
            NEAREST: number;
            CULL_FACE: number;
            ALIASED_LINE_WIDTH_RANGE: number;
            TEXTURE19: number;
            FRONT: number;
            DEPTH_CLEAR_VALUE: number;
            GREEN_BITS: number;
            TEXTURE29: number;
            TEXTURE23: number;
            MAX_RENDERBUFFER_SIZE: number;
            STENCIL_ATTACHMENT: number;
            TEXTURE27: number;
            BOOL_VEC2: number;
            OUT_OF_MEMORY: number;
            MIRRORED_REPEAT: number;
            POLYGON_OFFSET_UNITS: number;
            TEXTURE_MIN_FILTER: number;
            STENCIL_BACK_PASS_DEPTH_PASS: number;
            LINE_LOOP: number;
            FLOAT_MAT3: number;
            TEXTURE14: number;
            LINEAR: number;
            RGB5_A1: number;
            ONE_MINUS_SRC_COLOR: number;
            SAMPLE_COVERAGE_INVERT: number;
            DONT_CARE: number;
            FRAMEBUFFER_BINDING: number;
            RENDERBUFFER_ALPHA_SIZE: number;
            STENCIL_REF: number;
            ZERO: number;
            DECR_WRAP: number;
            SAMPLE_COVERAGE: number;
            STENCIL_BACK_FUNC: number;
            TEXTURE30: number;
            VIEWPORT: number;
            STENCIL_BITS: number;
            FLOAT: number;
            COLOR_WRITEMASK: number;
            SAMPLE_COVERAGE_VALUE: number;
            TEXTURE_CUBE_MAP_NEGATIVE_Y: number;
            STENCIL_BACK_FAIL: number;
            FLOAT_MAT4: number;
            UNSIGNED_SHORT_4_4_4_4: number;
            TEXTURE6: number;
            RENDERBUFFER_WIDTH: number;
            RGBA4: number;
            ALWAYS: number;
            BLEND_EQUATION_ALPHA: number;
            COLOR_BUFFER_BIT: number;
            TEXTURE_CUBE_MAP: number;
            DEPTH_BUFFER_BIT: number;
            STENCIL_CLEAR_VALUE: number;
            BLEND_EQUATION: number;
            RENDERBUFFER_GREEN_SIZE: number;
            NEAREST_MIPMAP_LINEAR: number;
            VERTEX_ATTRIB_ARRAY_TYPE: number;
            INCR_WRAP: number;
            ONE_MINUS_DST_COLOR: number;
            HIGH_FLOAT: number;
            BYTE: number;
            FRONT_FACE: number;
            SAMPLE_ALPHA_TO_COVERAGE: number;
            CCW: number;
            TEXTURE13: number;
            MAX_VERTEX_ATTRIBS: number;
            MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;
            TEXTURE_WRAP_T: number;
            UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;
            FLOAT_VEC2: number;
            LUMINANCE: number;
            GREATER: number;
            INT_VEC2: number;
            VALIDATE_STATUS: number;
            FRAMEBUFFER: number;
            FRAMEBUFFER_UNSUPPORTED: number;
            TEXTURE5: number;
            FUNC_SUBTRACT: number;
            BLEND_DST_ALPHA: number;
            SAMPLER_CUBE: number;
            ONE_MINUS_DST_ALPHA: number;
            LESS: number;
            TEXTURE_CUBE_MAP_POSITIVE_X: number;
            BLUE_BITS: number;
            DEPTH_TEST: number;
            VERTEX_ATTRIB_ARRAY_STRIDE: number;
            DELETE_STATUS: number;
            TEXTURE18: number;
            POLYGON_OFFSET_FACTOR: number;
            UNSIGNED_INT: number;
            TEXTURE_2D: number;
            DST_COLOR: number;
            FLOAT_MAT2: number;
            COMPRESSED_TEXTURE_FORMATS: number;
            MAX_FRAGMENT_UNIFORM_VECTORS: number;
            DEPTH_STENCIL_ATTACHMENT: number;
            LUMINANCE_ALPHA: number;
            CW: number;
            VERTEX_ATTRIB_ARRAY_NORMALIZED: number;
            TEXTURE_CUBE_MAP_NEGATIVE_Z: number;
            LINEAR_MIPMAP_LINEAR: number;
            BUFFER_SIZE: number;
            SAMPLE_BUFFERS: number;
            TEXTURE15: number;
            ACTIVE_TEXTURE: number;
            VERTEX_SHADER: number;
            TEXTURE22: number;
            VERTEX_ATTRIB_ARRAY_POINTER: number;
            INCR: number;
            COMPILE_STATUS: number;
            MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;
            TEXTURE7: number;
            UNSIGNED_SHORT_5_5_5_1: number;
            DEPTH_BITS: number;
            RGBA: number;
            TRIANGLE_STRIP: number;
            COLOR_CLEAR_VALUE: number;
            BROWSER_DEFAULT_WEBGL: number;
            INVALID_ENUM: number;
            SCISSOR_TEST: number;
            LINE_STRIP: number;
            FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;
            STENCIL_FUNC: number;
            FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;
            RENDERBUFFER_HEIGHT: number;
            TEXTURE8: number;
            TRIANGLES: number;
            FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;
            STENCIL_BACK_VALUE_MASK: number;
            TEXTURE25: number;
            RENDERBUFFER: number;
            LEQUAL: number;
            TEXTURE1: number;
            STENCIL_INDEX8: number;
            FUNC_ADD: number;
            STENCIL_FAIL: number;
            BLEND_SRC_ALPHA: number;
            BOOL: number;
            ALPHA_BITS: number;
            LOW_INT: number;
            TEXTURE10: number;
            SRC_COLOR: number;
            MAX_VARYING_VECTORS: number;
            BLEND_DST_RGB: number;
            TEXTURE_BINDING_CUBE_MAP: number;
            STENCIL_INDEX: number;
            TEXTURE_BINDING_2D: number;
            MEDIUM_INT: number;
            SHADER_TYPE: number;
            POLYGON_OFFSET_FILL: number;
            DYNAMIC_DRAW: number;
            TEXTURE4: number;
            STENCIL_BACK_PASS_DEPTH_FAIL: number;
            STREAM_DRAW: number;
            MAX_CUBE_MAP_TEXTURE_SIZE: number;
            TEXTURE17: number;
            TRIANGLE_FAN: number;
            UNPACK_ALIGNMENT: number;
            CURRENT_PROGRAM: number;
            LINES: number;
            INVALID_OPERATION: number;
            FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;
            LINEAR_MIPMAP_NEAREST: number;
            CLAMP_TO_EDGE: number;
            RENDERBUFFER_DEPTH_SIZE: number;
            TEXTURE_WRAP_S: number;
            ELEMENT_ARRAY_BUFFER: number;
            UNSIGNED_SHORT_5_6_5: number;
            ACTIVE_UNIFORMS: number;
            FLOAT_VEC3: number;
            NO_ERROR: number;
            ATTACHED_SHADERS: number;
            DEPTH_ATTACHMENT: number;
            TEXTURE11: number;
            STENCIL_TEST: number;
            ONE: number;
            FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;
            STATIC_DRAW: number;
            GEQUAL: number;
            BOOL_VEC4: number;
            COLOR_ATTACHMENT0: number;
            PACK_ALIGNMENT: number;
            MAX_TEXTURE_SIZE: number;
            STENCIL_PASS_DEPTH_FAIL: number;
            CULL_FACE_MODE: number;
            TEXTURE16: number;
            STENCIL_BACK_WRITEMASK: number;
            SRC_ALPHA: number;
            UNSIGNED_SHORT: number;
            TEXTURE21: number;
            FUNC_REVERSE_SUBTRACT: number;
            SHADING_LANGUAGE_VERSION: number;
            EQUAL: number;
            FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;
            BOOL_VEC3: number;
            SAMPLER_2D: number;
            TEXTURE_CUBE_MAP_NEGATIVE_X: number;
            MAX_TEXTURE_IMAGE_UNITS: number;
            TEXTURE_CUBE_MAP_POSITIVE_Y: number;
            RENDERBUFFER_INTERNAL_FORMAT: number;
            STENCIL_VALUE_MASK: number;
            ELEMENT_ARRAY_BUFFER_BINDING: number;
            ARRAY_BUFFER: number;
            DEPTH_RANGE: number;
            NICEST: number;
            ACTIVE_ATTRIBUTES: number;
            NEVER: number;
            FLOAT_VEC4: number;
            CURRENT_VERTEX_ATTRIB: number;
            STENCIL_PASS_DEPTH_PASS: number;
            INVERT: number;
            LINK_STATUS: number;
            RGB: number;
            INT_VEC4: number;
            TEXTURE2: number;
            UNPACK_COLORSPACE_CONVERSION_WEBGL: number;
            MEDIUM_FLOAT: number;
            SRC_ALPHA_SATURATE: number;
            BUFFER_USAGE: number;
            SHORT: number;
            NONE: number;
            UNSIGNED_BYTE: number;
            INT: number;
            SUBPIXEL_BITS: number;
            KEEP: number;
            SAMPLES: number;
            FRAGMENT_SHADER: number;
            LINE_WIDTH: number;
            BLEND_SRC_RGB: number;
            LOW_FLOAT: number;
            VERSION: number;

            // Static Constants
            static DEPTH_FUNC: number;
            static DEPTH_COMPONENT16: number;
            static REPLACE: number;
            static REPEAT: number;
            static VERTEX_ATTRIB_ARRAY_ENABLED: number;
            static FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;
            static STENCIL_BUFFER_BIT: number;
            static RENDERER: number;
            static STENCIL_BACK_REF: number;
            static TEXTURE26: number;
            static RGB565: number;
            static DITHER: number;
            static CONSTANT_COLOR: number;
            static GENERATE_MIPMAP_HINT: number;
            static POINTS: number;
            static DECR: number;
            static INT_VEC3: number;
            static TEXTURE28: number;
            static ONE_MINUS_CONSTANT_ALPHA: number;
            static BACK: number;
            static RENDERBUFFER_STENCIL_SIZE: number;
            static UNPACK_FLIP_Y_WEBGL: number;
            static BLEND: number;
            static TEXTURE9: number;
            static ARRAY_BUFFER_BINDING: number;
            static MAX_VIEWPORT_DIMS: number;
            static INVALID_FRAMEBUFFER_OPERATION: number;
            static TEXTURE: number;
            static TEXTURE0: number;
            static TEXTURE31: number;
            static TEXTURE24: number;
            static HIGH_INT: number;
            static RENDERBUFFER_BINDING: number;
            static BLEND_COLOR: number;
            static FASTEST: number;
            static STENCIL_WRITEMASK: number;
            static ALIASED_POINT_SIZE_RANGE: number;
            static TEXTURE12: number;
            static DST_ALPHA: number;
            static BLEND_EQUATION_RGB: number;
            static FRAMEBUFFER_COMPLETE: number;
            static NEAREST_MIPMAP_NEAREST: number;
            static VERTEX_ATTRIB_ARRAY_SIZE: number;
            static TEXTURE3: number;
            static DEPTH_WRITEMASK: number;
            static CONTEXT_LOST_WEBGL: number;
            static INVALID_VALUE: number;
            static TEXTURE_MAG_FILTER: number;
            static ONE_MINUS_CONSTANT_COLOR: number;
            static ONE_MINUS_SRC_ALPHA: number;
            static TEXTURE_CUBE_MAP_POSITIVE_Z: number;
            static NOTEQUAL: number;
            static ALPHA: number;
            static DEPTH_STENCIL: number;
            static MAX_VERTEX_UNIFORM_VECTORS: number;
            static DEPTH_COMPONENT: number;
            static RENDERBUFFER_RED_SIZE: number;
            static TEXTURE20: number;
            static RED_BITS: number;
            static RENDERBUFFER_BLUE_SIZE: number;
            static SCISSOR_BOX: number;
            static VENDOR: number;
            static FRONT_AND_BACK: number;
            static CONSTANT_ALPHA: number;
            static VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;
            static NEAREST: number;
            static CULL_FACE: number;
            static ALIASED_LINE_WIDTH_RANGE: number;
            static TEXTURE19: number;
            static FRONT: number;
            static DEPTH_CLEAR_VALUE: number;
            static GREEN_BITS: number;
            static TEXTURE29: number;
            static TEXTURE23: number;
            static MAX_RENDERBUFFER_SIZE: number;
            static STENCIL_ATTACHMENT: number;
            static TEXTURE27: number;
            static BOOL_VEC2: number;
            static OUT_OF_MEMORY: number;
            static MIRRORED_REPEAT: number;
            static POLYGON_OFFSET_UNITS: number;
            static TEXTURE_MIN_FILTER: number;
            static STENCIL_BACK_PASS_DEPTH_PASS: number;
            static LINE_LOOP: number;
            static FLOAT_MAT3: number;
            static TEXTURE14: number;
            static LINEAR: number;
            static RGB5_A1: number;
            static ONE_MINUS_SRC_COLOR: number;
            static SAMPLE_COVERAGE_INVERT: number;
            static DONT_CARE: number;
            static FRAMEBUFFER_BINDING: number;
            static RENDERBUFFER_ALPHA_SIZE: number;
            static STENCIL_REF: number;
            static ZERO: number;
            static DECR_WRAP: number;
            static SAMPLE_COVERAGE: number;
            static STENCIL_BACK_FUNC: number;
            static TEXTURE30: number;
            static VIEWPORT: number;
            static STENCIL_BITS: number;
            static FLOAT: number;
            static COLOR_WRITEMASK: number;
            static SAMPLE_COVERAGE_VALUE: number;
            static TEXTURE_CUBE_MAP_NEGATIVE_Y: number;
            static STENCIL_BACK_FAIL: number;
            static FLOAT_MAT4: number;
            static UNSIGNED_SHORT_4_4_4_4: number;
            static TEXTURE6: number;
            static RENDERBUFFER_WIDTH: number;
            static RGBA4: number;
            static ALWAYS: number;
            static BLEND_EQUATION_ALPHA: number;
            static COLOR_BUFFER_BIT: number;
            static TEXTURE_CUBE_MAP: number;
            static DEPTH_BUFFER_BIT: number;
            static STENCIL_CLEAR_VALUE: number;
            static BLEND_EQUATION: number;
            static RENDERBUFFER_GREEN_SIZE: number;
            static NEAREST_MIPMAP_LINEAR: number;
            static VERTEX_ATTRIB_ARRAY_TYPE: number;
            static INCR_WRAP: number;
            static ONE_MINUS_DST_COLOR: number;
            static HIGH_FLOAT: number;
            static BYTE: number;
            static FRONT_FACE: number;
            static SAMPLE_ALPHA_TO_COVERAGE: number;
            static CCW: number;
            static TEXTURE13: number;
            static MAX_VERTEX_ATTRIBS: number;
            static MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;
            static TEXTURE_WRAP_T: number;
            static UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;
            static FLOAT_VEC2: number;
            static LUMINANCE: number;
            static GREATER: number;
            static INT_VEC2: number;
            static VALIDATE_STATUS: number;
            static FRAMEBUFFER: number;
            static FRAMEBUFFER_UNSUPPORTED: number;
            static TEXTURE5: number;
            static FUNC_SUBTRACT: number;
            static BLEND_DST_ALPHA: number;
            static SAMPLER_CUBE: number;
            static ONE_MINUS_DST_ALPHA: number;
            static LESS: number;
            static TEXTURE_CUBE_MAP_POSITIVE_X: number;
            static BLUE_BITS: number;
            static DEPTH_TEST: number;
            static VERTEX_ATTRIB_ARRAY_STRIDE: number;
            static DELETE_STATUS: number;
            static TEXTURE18: number;
            static POLYGON_OFFSET_FACTOR: number;
            static UNSIGNED_INT: number;
            static TEXTURE_2D: number;
            static DST_COLOR: number;
            static FLOAT_MAT2: number;
            static COMPRESSED_TEXTURE_FORMATS: number;
            static MAX_FRAGMENT_UNIFORM_VECTORS: number;
            static DEPTH_STENCIL_ATTACHMENT: number;
            static LUMINANCE_ALPHA: number;
            static CW: number;
            static VERTEX_ATTRIB_ARRAY_NORMALIZED: number;
            static TEXTURE_CUBE_MAP_NEGATIVE_Z: number;
            static LINEAR_MIPMAP_LINEAR: number;
            static BUFFER_SIZE: number;
            static SAMPLE_BUFFERS: number;
            static TEXTURE15: number;
            static ACTIVE_TEXTURE: number;
            static VERTEX_SHADER: number;
            static TEXTURE22: number;
            static VERTEX_ATTRIB_ARRAY_POINTER: number;
            static INCR: number;
            static COMPILE_STATUS: number;
            static MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;
            static TEXTURE7: number;
            static UNSIGNED_SHORT_5_5_5_1: number;
            static DEPTH_BITS: number;
            static RGBA: number;
            static TRIANGLE_STRIP: number;
            static COLOR_CLEAR_VALUE: number;
            static BROWSER_DEFAULT_WEBGL: number;
            static INVALID_ENUM: number;
            static SCISSOR_TEST: number;
            static LINE_STRIP: number;
            static FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;
            static STENCIL_FUNC: number;
            static FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;
            static RENDERBUFFER_HEIGHT: number;
            static TEXTURE8: number;
            static TRIANGLES: number;
            static FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;
            static STENCIL_BACK_VALUE_MASK: number;
            static TEXTURE25: number;
            static RENDERBUFFER: number;
            static LEQUAL: number;
            static TEXTURE1: number;
            static STENCIL_INDEX8: number;
            static FUNC_ADD: number;
            static STENCIL_FAIL: number;
            static BLEND_SRC_ALPHA: number;
            static BOOL: number;
            static ALPHA_BITS: number;
            static LOW_INT: number;
            static TEXTURE10: number;
            static SRC_COLOR: number;
            static MAX_VARYING_VECTORS: number;
            static BLEND_DST_RGB: number;
            static TEXTURE_BINDING_CUBE_MAP: number;
            static STENCIL_INDEX: number;
            static TEXTURE_BINDING_2D: number;
            static MEDIUM_INT: number;
            static SHADER_TYPE: number;
            static POLYGON_OFFSET_FILL: number;
            static DYNAMIC_DRAW: number;
            static TEXTURE4: number;
            static STENCIL_BACK_PASS_DEPTH_FAIL: number;
            static STREAM_DRAW: number;
            static MAX_CUBE_MAP_TEXTURE_SIZE: number;
            static TEXTURE17: number;
            static TRIANGLE_FAN: number;
            static UNPACK_ALIGNMENT: number;
            static CURRENT_PROGRAM: number;
            static LINES: number;
            static INVALID_OPERATION: number;
            static FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;
            static LINEAR_MIPMAP_NEAREST: number;
            static CLAMP_TO_EDGE: number;
            static RENDERBUFFER_DEPTH_SIZE: number;
            static TEXTURE_WRAP_S: number;
            static ELEMENT_ARRAY_BUFFER: number;
            static UNSIGNED_SHORT_5_6_5: number;
            static ACTIVE_UNIFORMS: number;
            static FLOAT_VEC3: number;
            static NO_ERROR: number;
            static ATTACHED_SHADERS: number;
            static DEPTH_ATTACHMENT: number;
            static TEXTURE11: number;
            static STENCIL_TEST: number;
            static ONE: number;
            static FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;
            static STATIC_DRAW: number;
            static GEQUAL: number;
            static BOOL_VEC4: number;
            static COLOR_ATTACHMENT0: number;
            static PACK_ALIGNMENT: number;
            static MAX_TEXTURE_SIZE: number;
            static STENCIL_PASS_DEPTH_FAIL: number;
            static CULL_FACE_MODE: number;
            static TEXTURE16: number;
            static STENCIL_BACK_WRITEMASK: number;
            static SRC_ALPHA: number;
            static UNSIGNED_SHORT: number;
            static TEXTURE21: number;
            static FUNC_REVERSE_SUBTRACT: number;
            static SHADING_LANGUAGE_VERSION: number;
            static EQUAL: number;
            static FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;
            static BOOL_VEC3: number;
            static SAMPLER_2D: number;
            static TEXTURE_CUBE_MAP_NEGATIVE_X: number;
            static MAX_TEXTURE_IMAGE_UNITS: number;
            static TEXTURE_CUBE_MAP_POSITIVE_Y: number;
            static RENDERBUFFER_INTERNAL_FORMAT: number;
            static STENCIL_VALUE_MASK: number;
            static ELEMENT_ARRAY_BUFFER_BINDING: number;
            static ARRAY_BUFFER: number;
            static DEPTH_RANGE: number;
            static NICEST: number;
            static ACTIVE_ATTRIBUTES: number;
            static NEVER: number;
            static FLOAT_VEC4: number;
            static CURRENT_VERTEX_ATTRIB: number;
            static STENCIL_PASS_DEPTH_PASS: number;
            static INVERT: number;
            static LINK_STATUS: number;
            static RGB: number;
            static INT_VEC4: number;
            static TEXTURE2: number;
            static UNPACK_COLORSPACE_CONVERSION_WEBGL: number;
            static MEDIUM_FLOAT: number;
            static SRC_ALPHA_SATURATE: number;
            static BUFFER_USAGE: number;
            static SHORT: number;
            static NONE: number;
            static UNSIGNED_BYTE: number;
            static INT: number;
            static SUBPIXEL_BITS: number;
            static KEEP: number;
            static SAMPLES: number;
            static FRAGMENT_SHADER: number;
            static LINE_WIDTH: number;
            static BLEND_SRC_RGB: number;
            static LOW_FLOAT: number;
            static VERSION: number;
        }

        // Set Constant Values
        // https://gist.github.com/szimek/763999

        defineConst(WebGLRenderingContext, "ACTIVE_ATTRIBUTES", 35721);
        defineConst(WebGLRenderingContext, "ACTIVE_TEXTURE", 34016);
        defineConst(WebGLRenderingContext, "ACTIVE_UNIFORMS", 35718);
        defineConst(WebGLRenderingContext, "ALIASED_LINE_WIDTH_RANGE", 33902);
        defineConst(WebGLRenderingContext, "ALIASED_POINT_SIZE_RANGE", 33901);
        defineConst(WebGLRenderingContext, "ALPHA", 6406);
        defineConst(WebGLRenderingContext, "ALPHA_BITS", 3413);
        defineConst(WebGLRenderingContext, "ALWAYS", 519);
        defineConst(WebGLRenderingContext, "ARRAY_BUFFER", 34962);
        defineConst(WebGLRenderingContext, "ARRAY_BUFFER_BINDING", 34964);
        defineConst(WebGLRenderingContext, "ATTACHED_SHADERS", 35717);
        defineConst(WebGLRenderingContext, "BACK", 1029);
        defineConst(WebGLRenderingContext, "BLEND", 3042);
        defineConst(WebGLRenderingContext, "BLEND_COLOR", 32773);
        defineConst(WebGLRenderingContext, "BLEND_DST_ALPHA", 32970);
        defineConst(WebGLRenderingContext, "BLEND_DST_RGB", 32968);
        defineConst(WebGLRenderingContext, "BLEND_EQUATION", 32777);
        defineConst(WebGLRenderingContext, "BLEND_EQUATION_ALPHA", 34877);
        defineConst(WebGLRenderingContext, "BLEND_EQUATION_RGB", 32777);
        defineConst(WebGLRenderingContext, "BLEND_SRC_ALPHA", 32971);
        defineConst(WebGLRenderingContext, "BLEND_SRC_RGB", 32969);
        defineConst(WebGLRenderingContext, "BLUE_BITS", 3412);
        defineConst(WebGLRenderingContext, "BOOL", 35670);
        defineConst(WebGLRenderingContext, "BOOL_VEC2", 35671);
        defineConst(WebGLRenderingContext, "BOOL_VEC3", 35672);
        defineConst(WebGLRenderingContext, "BOOL_VEC4", 35673);
        defineConst(WebGLRenderingContext, "BROWSER_DEFAULT_WEBGL", 37444);
        defineConst(WebGLRenderingContext, "BUFFER_SIZE", 34660);
        defineConst(WebGLRenderingContext, "BUFFER_USAGE", 34661);
        defineConst(WebGLRenderingContext, "BYTE", 5120);
        defineConst(WebGLRenderingContext, "CCW", 2305);
        defineConst(WebGLRenderingContext, "CLAMP_TO_EDGE", 33071);
        defineConst(WebGLRenderingContext, "COLOR_ATTACHMENT0", 36064);
        defineConst(WebGLRenderingContext, "COLOR_BUFFER_BIT", 16384);
        defineConst(WebGLRenderingContext, "COLOR_CLEAR_VALUE", 3106);
        defineConst(WebGLRenderingContext, "COLOR_WRITEMASK", 3107);
        defineConst(WebGLRenderingContext, "COMPILE_STATUS", 35713);
        defineConst(WebGLRenderingContext, "COMPRESSED_TEXTURE_FORMATS", 34467);
        defineConst(WebGLRenderingContext, "CONSTANT_ALPHA", 32771);
        defineConst(WebGLRenderingContext, "CONSTANT_COLOR", 32769);
        defineConst(WebGLRenderingContext, "CONTEXT_LOST_WEBGL", 37442);
        defineConst(WebGLRenderingContext, "CULL_FACE", 2884);
        defineConst(WebGLRenderingContext, "CULL_FACE_MODE", 2885);
        defineConst(WebGLRenderingContext, "CURRENT_PROGRAM", 35725);
        defineConst(WebGLRenderingContext, "CURRENT_VERTEX_ATTRIB", 34342);
        defineConst(WebGLRenderingContext, "CW", 2304);
        defineConst(WebGLRenderingContext, "DECR", 7683);
        defineConst(WebGLRenderingContext, "DECR_WRAP", 34056);
        defineConst(WebGLRenderingContext, "DELETE_STATUS", 35712);
        defineConst(WebGLRenderingContext, "DEPTH_ATTACHMENT", 36096);
        defineConst(WebGLRenderingContext, "DEPTH_BITS", 3414);
        defineConst(WebGLRenderingContext, "DEPTH_BUFFER_BIT", 256);
        defineConst(WebGLRenderingContext, "DEPTH_CLEAR_VALUE", 2931);
        defineConst(WebGLRenderingContext, "DEPTH_COMPONENT", 6402);
        defineConst(WebGLRenderingContext, "DEPTH_COMPONENT16", 33189);
        defineConst(WebGLRenderingContext, "DEPTH_FUNC", 2932);
        defineConst(WebGLRenderingContext, "DEPTH_RANGE", 2928);
        defineConst(WebGLRenderingContext, "DEPTH_STENCIL", 34041);
        defineConst(WebGLRenderingContext, "DEPTH_STENCIL_ATTACHMENT", 33306);
        defineConst(WebGLRenderingContext, "DEPTH_TEST", 2929);
        defineConst(WebGLRenderingContext, "DEPTH_WRITEMASK", 2930);
        defineConst(WebGLRenderingContext, "DITHER", 3024);
        defineConst(WebGLRenderingContext, "DONT_CARE", 4352);
        defineConst(WebGLRenderingContext, "DST_ALPHA", 772);
        defineConst(WebGLRenderingContext, "DST_COLOR", 774);
        defineConst(WebGLRenderingContext, "DYNAMIC_DRAW", 35048);
        defineConst(WebGLRenderingContext, "ELEMENT_ARRAY_BUFFER", 34963);
        defineConst(WebGLRenderingContext, "ELEMENT_ARRAY_BUFFER_BINDING", 34965);
        defineConst(WebGLRenderingContext, "EQUAL", 514);
        defineConst(WebGLRenderingContext, "FASTEST", 4353);
        defineConst(WebGLRenderingContext, "FLOAT", 5126);
        defineConst(WebGLRenderingContext, "FLOAT_MAT2", 35674);
        defineConst(WebGLRenderingContext, "FLOAT_MAT3", 35675);
        defineConst(WebGLRenderingContext, "FLOAT_MAT4", 35676);
        defineConst(WebGLRenderingContext, "FLOAT_VEC2", 35664);
        defineConst(WebGLRenderingContext, "FLOAT_VEC3", 35665);
        defineConst(WebGLRenderingContext, "FLOAT_VEC4", 35666);
        defineConst(WebGLRenderingContext, "FRAGMENT_SHADER", 35632);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER", 36160);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", 36049);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", 36048);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", 36051);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", 36050);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_BINDING", 36006);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_COMPLETE", 36053);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_INCOMPLETE_ATTACHMENT", 36054);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_INCOMPLETE_DIMENSIONS", 36057);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", 36055);
        defineConst(WebGLRenderingContext, "FRAMEBUFFER_UNSUPPORTED", 36061);
        defineConst(WebGLRenderingContext, "FRONT", 1028);
        defineConst(WebGLRenderingContext, "FRONT_AND_BACK", 1032);
        defineConst(WebGLRenderingContext, "FRONT_FACE", 2886);
        defineConst(WebGLRenderingContext, "FUNC_ADD", 32774);
        defineConst(WebGLRenderingContext, "FUNC_REVERSE_SUBTRACT", 32779);
        defineConst(WebGLRenderingContext, "FUNC_SUBTRACT", 32778);
        defineConst(WebGLRenderingContext, "GENERATE_MIPMAP_HINT", 33170);
        defineConst(WebGLRenderingContext, "GEQUAL", 518);
        defineConst(WebGLRenderingContext, "GREATER", 516);
        defineConst(WebGLRenderingContext, "GREEN_BITS", 3411);
        defineConst(WebGLRenderingContext, "HIGH_FLOAT", 36338);
        defineConst(WebGLRenderingContext, "HIGH_INT", 36341);
        defineConst(WebGLRenderingContext, "INCR", 7682);
        defineConst(WebGLRenderingContext, "INCR_WRAP", 34055);
        defineConst(WebGLRenderingContext, "INT", 5124);
        defineConst(WebGLRenderingContext, "INT_VEC2", 35667);
        defineConst(WebGLRenderingContext, "INT_VEC3", 35668);
        defineConst(WebGLRenderingContext, "INT_VEC4", 35669);
        defineConst(WebGLRenderingContext, "INVALID_ENUM", 1280);
        defineConst(WebGLRenderingContext, "INVALID_FRAMEBUFFER_OPERATION", 1286);
        defineConst(WebGLRenderingContext, "INVALID_OPERATION", 1282);
        defineConst(WebGLRenderingContext, "INVALID_VALUE", 1281);
        defineConst(WebGLRenderingContext, "INVERT", 5386);
        defineConst(WebGLRenderingContext, "KEEP", 7680);
        defineConst(WebGLRenderingContext, "LEQUAL", 515);
        defineConst(WebGLRenderingContext, "LESS", 513);
        defineConst(WebGLRenderingContext, "LINE_LOOP", 2);
        defineConst(WebGLRenderingContext, "LINE_STRIP", 3);
        defineConst(WebGLRenderingContext, "LINE_WIDTH", 2849);
        defineConst(WebGLRenderingContext, "LINEAR", 9729);
        defineConst(WebGLRenderingContext, "LINEAR_MIPMAP_LINEAR", 9987);
        defineConst(WebGLRenderingContext, "LINEAR_MIPMAP_NEAREST", 9985);
        defineConst(WebGLRenderingContext, "LINES", 1);
        defineConst(WebGLRenderingContext, "LINK_STATUS", 35714);
        defineConst(WebGLRenderingContext, "LOW_FLOAT", 36336);
        defineConst(WebGLRenderingContext, "LOW_INT", 36339);
        defineConst(WebGLRenderingContext, "LUMINANCE", 6409);
        defineConst(WebGLRenderingContext, "LUMINANCE_ALPHA", 6410);
        defineConst(WebGLRenderingContext, "MAX_COMBINED_TEXTURE_IMAGE_UNITS", 35661);
        defineConst(WebGLRenderingContext, "MAX_CUBE_MAP_TEXTURE_SIZE", 34076);
        defineConst(WebGLRenderingContext, "MAX_FRAGMENT_UNIFORM_VECTORS", 36349);
        defineConst(WebGLRenderingContext, "MAX_RENDERBUFFER_SIZE", 34024);
        defineConst(WebGLRenderingContext, "MAX_TEXTURE_IMAGE_UNITS", 34930);
        defineConst(WebGLRenderingContext, "MAX_TEXTURE_SIZE", 3379);
        defineConst(WebGLRenderingContext, "MAX_VARYING_VECTORS", 36348);
        defineConst(WebGLRenderingContext, "MAX_VERTEX_ATTRIBS", 34921);
        defineConst(WebGLRenderingContext, "MAX_VERTEX_TEXTURE_IMAGE_UNITS", 35660);
        defineConst(WebGLRenderingContext, "MAX_VERTEX_UNIFORM_VECTORS", 36347);
        defineConst(WebGLRenderingContext, "MAX_VIEWPORT_DIMS", 3386);
        defineConst(WebGLRenderingContext, "MEDIUM_FLOAT", 36337);
        defineConst(WebGLRenderingContext, "MEDIUM_INT", 36340);
        defineConst(WebGLRenderingContext, "MIRRORED_REPEAT", 33648);
        defineConst(WebGLRenderingContext, "NEAREST", 9728);
        defineConst(WebGLRenderingContext, "NEAREST_MIPMAP_LINEAR", 9986);
        defineConst(WebGLRenderingContext, "NEAREST_MIPMAP_NEAREST", 9984);
        defineConst(WebGLRenderingContext, "NEVER", 512);
        defineConst(WebGLRenderingContext, "NICEST", 4354);
        defineConst(WebGLRenderingContext, "NO_ERROR", 0);
        defineConst(WebGLRenderingContext, "NONE", 0);
        defineConst(WebGLRenderingContext, "NOTEQUAL", 517);
        defineConst(WebGLRenderingContext, "ONE", 1);
        defineConst(WebGLRenderingContext, "ONE_MINUS_CONSTANT_ALPHA", 32772);
        defineConst(WebGLRenderingContext, "ONE_MINUS_CONSTANT_COLOR", 32770);
        defineConst(WebGLRenderingContext, "ONE_MINUS_DST_ALPHA", 773);
        defineConst(WebGLRenderingContext, "ONE_MINUS_DST_COLOR", 775);
        defineConst(WebGLRenderingContext, "ONE_MINUS_SRC_ALPHA", 771);
        defineConst(WebGLRenderingContext, "ONE_MINUS_SRC_COLOR", 769);
        defineConst(WebGLRenderingContext, "OUT_OF_MEMORY", 1285);
        defineConst(WebGLRenderingContext, "PACK_ALIGNMENT", 3333);
        defineConst(WebGLRenderingContext, "POINTS", 0);
        defineConst(WebGLRenderingContext, "POLYGON_OFFSET_FACTOR", 32824);
        defineConst(WebGLRenderingContext, "POLYGON_OFFSET_FILL", 32823);
        defineConst(WebGLRenderingContext, "POLYGON_OFFSET_UNITS", 10752);
        defineConst(WebGLRenderingContext, "RED_BITS", 3410);
        defineConst(WebGLRenderingContext, "RENDERBUFFER", 36161);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_ALPHA_SIZE", 36179);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_BINDING", 36007);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_BLUE_SIZE", 36178);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_DEPTH_SIZE", 36180);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_GREEN_SIZE", 36177);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_HEIGHT", 36163);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_INTERNAL_FORMAT", 36164);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_RED_SIZE", 36176);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_STENCIL_SIZE", 36181);
        defineConst(WebGLRenderingContext, "RENDERBUFFER_WIDTH", 36162);
        defineConst(WebGLRenderingContext, "RENDERER", 7937);
        defineConst(WebGLRenderingContext, "REPEAT", 10497);
        defineConst(WebGLRenderingContext, "REPLACE", 7681);
        defineConst(WebGLRenderingContext, "RGB", 6407);
        defineConst(WebGLRenderingContext, "RGB5_A1", 32855);
        defineConst(WebGLRenderingContext, "RGB565", 36194);
        defineConst(WebGLRenderingContext, "RGBA", 6408);
        defineConst(WebGLRenderingContext, "RGBA4", 32854);
        defineConst(WebGLRenderingContext, "SAMPLE_ALPHA_TO_COVERAGE", 32926);
        defineConst(WebGLRenderingContext, "SAMPLE_BUFFERS", 32936);
        defineConst(WebGLRenderingContext, "SAMPLE_COVERAGE", 32928);
        defineConst(WebGLRenderingContext, "SAMPLE_COVERAGE_INVERT", 32939);
        defineConst(WebGLRenderingContext, "SAMPLE_COVERAGE_VALUE", 32938);
        defineConst(WebGLRenderingContext, "SAMPLER_2D", 35678);
        defineConst(WebGLRenderingContext, "SAMPLER_CUBE", 35680);
        defineConst(WebGLRenderingContext, "SAMPLES", 32937);
        defineConst(WebGLRenderingContext, "SCISSOR_BOX", 3088);
        defineConst(WebGLRenderingContext, "SCISSOR_TEST", 3089);
        defineConst(WebGLRenderingContext, "SHADER_TYPE", 35663);
        defineConst(WebGLRenderingContext, "SHADING_LANGUAGE_VERSION", 35724);
        defineConst(WebGLRenderingContext, "SHORT", 5122);
        defineConst(WebGLRenderingContext, "SRC_ALPHA", 770);
        defineConst(WebGLRenderingContext, "SRC_ALPHA_SATURATE", 776);
        defineConst(WebGLRenderingContext, "SRC_COLOR", 768);
        defineConst(WebGLRenderingContext, "STATIC_DRAW", 35044);
        defineConst(WebGLRenderingContext, "STENCIL_ATTACHMENT", 36128);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_FAIL", 34817);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_FUNC", 34816);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_PASS_DEPTH_FAIL", 34818);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_PASS_DEPTH_PASS", 34819);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_REF", 36003);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_VALUE_MASK", 36004);
        defineConst(WebGLRenderingContext, "STENCIL_BACK_WRITEMASK", 36005);
        defineConst(WebGLRenderingContext, "STENCIL_BITS", 3415);
        defineConst(WebGLRenderingContext, "STENCIL_BUFFER_BIT", 1024);
        defineConst(WebGLRenderingContext, "STENCIL_CLEAR_VALUE", 2961);
        defineConst(WebGLRenderingContext, "STENCIL_FAIL", 2964);
        defineConst(WebGLRenderingContext, "STENCIL_FUNC", 2962);
        defineConst(WebGLRenderingContext, "STENCIL_INDEX", 6401);
        defineConst(WebGLRenderingContext, "STENCIL_INDEX8", 36168);
        defineConst(WebGLRenderingContext, "STENCIL_PASS_DEPTH_FAIL", 2965);
        defineConst(WebGLRenderingContext, "STENCIL_PASS_DEPTH_PASS", 2966);
        defineConst(WebGLRenderingContext, "STENCIL_REF", 2967);
        defineConst(WebGLRenderingContext, "STENCIL_TEST", 2960);
        defineConst(WebGLRenderingContext, "STENCIL_VALUE_MASK", 2963);
        defineConst(WebGLRenderingContext, "STENCIL_WRITEMASK", 2968);
        defineConst(WebGLRenderingContext, "STREAM_DRAW", 35040);
        defineConst(WebGLRenderingContext, "SUBPIXEL_BITS", 3408);
        defineConst(WebGLRenderingContext, "TEXTURE", 5890);
        defineConst(WebGLRenderingContext, "TEXTURE_2D", 3553);
        defineConst(WebGLRenderingContext, "TEXTURE_BINDING_2D", 32873);
        defineConst(WebGLRenderingContext, "TEXTURE_BINDING_CUBE_MAP", 34068);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP", 34067);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP_NEGATIVE_X", 34070);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP_NEGATIVE_Y", 34072);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP_NEGATIVE_Z", 34074);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP_POSITIVE_X", 34069);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP_POSITIVE_Y", 34071);
        defineConst(WebGLRenderingContext, "TEXTURE_CUBE_MAP_POSITIVE_Z", 34073);
        defineConst(WebGLRenderingContext, "TEXTURE_MAG_FILTER", 10240);
        defineConst(WebGLRenderingContext, "TEXTURE_MIN_FILTER", 10241);
        defineConst(WebGLRenderingContext, "TEXTURE_WRAP_S", 10242);
        defineConst(WebGLRenderingContext, "TEXTURE_WRAP_T", 10243);
        defineConst(WebGLRenderingContext, "TEXTURE0", 33984);
        defineConst(WebGLRenderingContext, "TEXTURE1", 33985);
        defineConst(WebGLRenderingContext, "TEXTURE10", 33994);
        defineConst(WebGLRenderingContext, "TEXTURE11", 33995);
        defineConst(WebGLRenderingContext, "TEXTURE12", 33996);
        defineConst(WebGLRenderingContext, "TEXTURE13", 33997);
        defineConst(WebGLRenderingContext, "TEXTURE14", 33998);
        defineConst(WebGLRenderingContext, "TEXTURE15", 33999);
        defineConst(WebGLRenderingContext, "TEXTURE16", 34000);
        defineConst(WebGLRenderingContext, "TEXTURE17", 34001);
        defineConst(WebGLRenderingContext, "TEXTURE18", 34002);
        defineConst(WebGLRenderingContext, "TEXTURE19", 34003);
        defineConst(WebGLRenderingContext, "TEXTURE2", 33986);
        defineConst(WebGLRenderingContext, "TEXTURE20", 34004);
        defineConst(WebGLRenderingContext, "TEXTURE21", 34005);
        defineConst(WebGLRenderingContext, "TEXTURE22", 34006);
        defineConst(WebGLRenderingContext, "TEXTURE23", 34007);
        defineConst(WebGLRenderingContext, "TEXTURE24", 34008);
        defineConst(WebGLRenderingContext, "TEXTURE25", 34009);
        defineConst(WebGLRenderingContext, "TEXTURE26", 34010);
        defineConst(WebGLRenderingContext, "TEXTURE27", 34011);
        defineConst(WebGLRenderingContext, "TEXTURE28", 34012);
        defineConst(WebGLRenderingContext, "TEXTURE29", 34013);
        defineConst(WebGLRenderingContext, "TEXTURE3", 33987);
        defineConst(WebGLRenderingContext, "TEXTURE30", 34014);
        defineConst(WebGLRenderingContext, "TEXTURE31", 34015);
        defineConst(WebGLRenderingContext, "TEXTURE4", 33988);
        defineConst(WebGLRenderingContext, "TEXTURE5", 33989);
        defineConst(WebGLRenderingContext, "TEXTURE6", 33990);
        defineConst(WebGLRenderingContext, "TEXTURE7", 33991);
        defineConst(WebGLRenderingContext, "TEXTURE8", 33992);
        defineConst(WebGLRenderingContext, "TEXTURE9", 33993);
        defineConst(WebGLRenderingContext, "TRIANGLE_FAN", 6);
        defineConst(WebGLRenderingContext, "TRIANGLE_STRIP", 5);
        defineConst(WebGLRenderingContext, "TRIANGLES", 4);
        defineConst(WebGLRenderingContext, "UNPACK_ALIGNMENT", 3317);
        defineConst(WebGLRenderingContext, "UNPACK_COLORSPACE_CONVERSION_WEBGL", 37443);
        defineConst(WebGLRenderingContext, "UNPACK_FLIP_Y_WEBGL", 37440);
        defineConst(WebGLRenderingContext, "UNPACK_PREMULTIPLY_ALPHA_WEBGL", 37441);
        defineConst(WebGLRenderingContext, "UNSIGNED_BYTE", 5121);
        defineConst(WebGLRenderingContext, "UNSIGNED_INT", 5125);
        defineConst(WebGLRenderingContext, "UNSIGNED_SHORT", 5123);
        defineConst(WebGLRenderingContext, "UNSIGNED_SHORT_4_4_4_4", 32819);
        defineConst(WebGLRenderingContext, "UNSIGNED_SHORT_5_5_5_1", 32820);
        defineConst(WebGLRenderingContext, "UNSIGNED_SHORT_5_6_5", 33635);
        defineConst(WebGLRenderingContext, "VALIDATE_STATUS", 35715);
        defineConst(WebGLRenderingContext, "VENDOR", 7936);
        defineConst(WebGLRenderingContext, "VERSION", 7938);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", 34975);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_ENABLED", 34338);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_NORMALIZED", 34922);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_POINTER", 34373);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_SIZE", 34339);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_STRIDE", 34340);
        defineConst(WebGLRenderingContext, "VERTEX_ATTRIB_ARRAY_TYPE", 34341);
        defineConst(WebGLRenderingContext, "VERTEX_SHADER", 35633);
        defineConst(WebGLRenderingContext, "VIEWPORT", 2978);
        defineConst(WebGLRenderingContext, "ZERO", 0);
,,
        defineConst(WebGLRenderingContext.prototype, "ACTIVE_ATTRIBUTES", WebGLRenderingContext.ACTIVE_ATTRIBUTES);
        defineConst(WebGLRenderingContext.prototype, "ACTIVE_TEXTURE", WebGLRenderingContext.ACTIVE_TEXTURE);
        defineConst(WebGLRenderingContext.prototype, "ACTIVE_UNIFORMS", WebGLRenderingContext.ACTIVE_UNIFORMS);
        defineConst(WebGLRenderingContext.prototype, "ALIASED_LINE_WIDTH_RANGE", WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE);
        defineConst(WebGLRenderingContext.prototype, "ALIASED_POINT_SIZE_RANGE", WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE);
        defineConst(WebGLRenderingContext.prototype, "ALPHA", WebGLRenderingContext.ALPHA);
        defineConst(WebGLRenderingContext.prototype, "ALPHA_BITS", WebGLRenderingContext.ALPHA_BITS);
        defineConst(WebGLRenderingContext.prototype, "ALWAYS", WebGLRenderingContext.ALWAYS);
        defineConst(WebGLRenderingContext.prototype, "ARRAY_BUFFER", WebGLRenderingContext.ARRAY_BUFFER);
        defineConst(WebGLRenderingContext.prototype, "ARRAY_BUFFER_BINDING", WebGLRenderingContext.ARRAY_BUFFER_BINDING);
        defineConst(WebGLRenderingContext.prototype, "ATTACHED_SHADERS", WebGLRenderingContext.ATTACHED_SHADERS);
        defineConst(WebGLRenderingContext.prototype, "BACK", WebGLRenderingContext.BACK);
        defineConst(WebGLRenderingContext.prototype, "BLEND", WebGLRenderingContext.BLEND);
        defineConst(WebGLRenderingContext.prototype, "BLEND_COLOR", WebGLRenderingContext.BLEND_COLOR);
        defineConst(WebGLRenderingContext.prototype, "BLEND_DST_ALPHA", WebGLRenderingContext.BLEND_DST_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "BLEND_DST_RGB", WebGLRenderingContext.BLEND_DST_RGB);
        defineConst(WebGLRenderingContext.prototype, "BLEND_EQUATION", WebGLRenderingContext.BLEND_EQUATION);
        defineConst(WebGLRenderingContext.prototype, "BLEND_EQUATION_ALPHA", WebGLRenderingContext.BLEND_EQUATION_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "BLEND_EQUATION_RGB", WebGLRenderingContext.BLEND_EQUATION_RGB);
        defineConst(WebGLRenderingContext.prototype, "BLEND_SRC_ALPHA", WebGLRenderingContext.BLEND_SRC_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "BLEND_SRC_RGB", WebGLRenderingContext.BLEND_SRC_RGB);
        defineConst(WebGLRenderingContext.prototype, "BLUE_BITS", WebGLRenderingContext.BLUE_BITS);
        defineConst(WebGLRenderingContext.prototype, "BOOL", WebGLRenderingContext.BOOL);
        defineConst(WebGLRenderingContext.prototype, "BOOL_VEC2", WebGLRenderingContext.BOOL_VEC2);
        defineConst(WebGLRenderingContext.prototype, "BOOL_VEC3", WebGLRenderingContext.BOOL_VEC3);
        defineConst(WebGLRenderingContext.prototype, "BOOL_VEC4", WebGLRenderingContext.BOOL_VEC4);
        defineConst(WebGLRenderingContext.prototype, "BROWSER_DEFAULT_WEBGL", WebGLRenderingContext.BROWSER_DEFAULT_WEBGL);
        defineConst(WebGLRenderingContext.prototype, "BUFFER_SIZE", WebGLRenderingContext.BUFFER_SIZE);
        defineConst(WebGLRenderingContext.prototype, "BUFFER_USAGE", WebGLRenderingContext.BUFFER_USAGE);
        defineConst(WebGLRenderingContext.prototype, "BYTE", WebGLRenderingContext.BYTE);
        defineConst(WebGLRenderingContext.prototype, "CCW", WebGLRenderingContext.CCW);
        defineConst(WebGLRenderingContext.prototype, "CLAMP_TO_EDGE", WebGLRenderingContext.CLAMP_TO_EDGE);
        defineConst(WebGLRenderingContext.prototype, "COLOR_ATTACHMENT0", WebGLRenderingContext.COLOR_ATTACHMENT0);
        defineConst(WebGLRenderingContext.prototype, "COLOR_BUFFER_BIT", WebGLRenderingContext.COLOR_BUFFER_BIT);
        defineConst(WebGLRenderingContext.prototype, "COLOR_CLEAR_VALUE", WebGLRenderingContext.COLOR_CLEAR_VALUE);
        defineConst(WebGLRenderingContext.prototype, "COLOR_WRITEMASK", WebGLRenderingContext.COLOR_WRITEMASK);
        defineConst(WebGLRenderingContext.prototype, "COMPILE_STATUS", WebGLRenderingContext.COMPILE_STATUS);
        defineConst(WebGLRenderingContext.prototype, "COMPRESSED_TEXTURE_FORMATS", WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS);
        defineConst(WebGLRenderingContext.prototype, "CONSTANT_ALPHA", WebGLRenderingContext.CONSTANT_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "CONSTANT_COLOR", WebGLRenderingContext.CONSTANT_COLOR);
        defineConst(WebGLRenderingContext.prototype, "CONTEXT_LOST_WEBGL", WebGLRenderingContext.CONTEXT_LOST_WEBGL);
        defineConst(WebGLRenderingContext.prototype, "CULL_FACE", WebGLRenderingContext.CULL_FACE);
        defineConst(WebGLRenderingContext.prototype, "CULL_FACE_MODE", WebGLRenderingContext.CULL_FACE_MODE);
        defineConst(WebGLRenderingContext.prototype, "CURRENT_PROGRAM", WebGLRenderingContext.CURRENT_PROGRAM);
        defineConst(WebGLRenderingContext.prototype, "CURRENT_VERTEX_ATTRIB", WebGLRenderingContext.CURRENT_VERTEX_ATTRIB);
        defineConst(WebGLRenderingContext.prototype, "CW", WebGLRenderingContext.CW);
        defineConst(WebGLRenderingContext.prototype, "DECR", WebGLRenderingContext.DECR);
        defineConst(WebGLRenderingContext.prototype, "DECR_WRAP", WebGLRenderingContext.DECR_WRAP);
        defineConst(WebGLRenderingContext.prototype, "DELETE_STATUS", WebGLRenderingContext.DELETE_STATUS);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_ATTACHMENT", WebGLRenderingContext.DEPTH_ATTACHMENT);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_BITS", WebGLRenderingContext.DEPTH_BITS);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_BUFFER_BIT", WebGLRenderingContext.DEPTH_BUFFER_BIT);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_CLEAR_VALUE", WebGLRenderingContext.DEPTH_CLEAR_VALUE);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_COMPONENT", WebGLRenderingContext.DEPTH_COMPONENT);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_COMPONENT16", WebGLRenderingContext.DEPTH_COMPONENT16);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_FUNC", WebGLRenderingContext.DEPTH_FUNC);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_RANGE", WebGLRenderingContext.DEPTH_RANGE);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_STENCIL", WebGLRenderingContext.DEPTH_STENCIL);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_STENCIL_ATTACHMENT", WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_TEST", WebGLRenderingContext.DEPTH_TEST);
        defineConst(WebGLRenderingContext.prototype, "DEPTH_WRITEMASK", WebGLRenderingContext.DEPTH_WRITEMASK);
        defineConst(WebGLRenderingContext.prototype, "DITHER", WebGLRenderingContext.DITHER);
        defineConst(WebGLRenderingContext.prototype, "DONT_CARE", WebGLRenderingContext.DONT_CARE);
        defineConst(WebGLRenderingContext.prototype, "DST_ALPHA", WebGLRenderingContext.DST_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "DST_COLOR", WebGLRenderingContext.DST_COLOR);
        defineConst(WebGLRenderingContext.prototype, "DYNAMIC_DRAW", WebGLRenderingContext.DYNAMIC_DRAW);
        defineConst(WebGLRenderingContext.prototype, "ELEMENT_ARRAY_BUFFER", WebGLRenderingContext.ELEMENT_ARRAY_BUFFER);
        defineConst(WebGLRenderingContext.prototype, "ELEMENT_ARRAY_BUFFER_BINDING", WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING);
        defineConst(WebGLRenderingContext.prototype, "EQUAL", WebGLRenderingContext.EQUAL);
        defineConst(WebGLRenderingContext.prototype, "FASTEST", WebGLRenderingContext.FASTEST);
        defineConst(WebGLRenderingContext.prototype, "FLOAT", WebGLRenderingContext.FLOAT);
        defineConst(WebGLRenderingContext.prototype, "FLOAT_MAT2", WebGLRenderingContext.FLOAT_MAT2);
        defineConst(WebGLRenderingContext.prototype, "FLOAT_MAT3", WebGLRenderingContext.FLOAT_MAT3);
        defineConst(WebGLRenderingContext.prototype, "FLOAT_MAT4", WebGLRenderingContext.FLOAT_MAT4);
        defineConst(WebGLRenderingContext.prototype, "FLOAT_VEC2", WebGLRenderingContext.FLOAT_VEC2);
        defineConst(WebGLRenderingContext.prototype, "FLOAT_VEC3", WebGLRenderingContext.FLOAT_VEC3);
        defineConst(WebGLRenderingContext.prototype, "FLOAT_VEC4", WebGLRenderingContext.FLOAT_VEC4);
        defineConst(WebGLRenderingContext.prototype, "FRAGMENT_SHADER", WebGLRenderingContext.FRAGMENT_SHADER);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER", WebGLRenderingContext.FRAMEBUFFER);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_BINDING", WebGLRenderingContext.FRAMEBUFFER_BINDING);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_COMPLETE", WebGLRenderingContext.FRAMEBUFFER_COMPLETE);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_INCOMPLETE_ATTACHMENT", WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_INCOMPLETE_DIMENSIONS", WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT);
        defineConst(WebGLRenderingContext.prototype, "FRAMEBUFFER_UNSUPPORTED", WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED);
        defineConst(WebGLRenderingContext.prototype, "FRONT", WebGLRenderingContext.FRONT);
        defineConst(WebGLRenderingContext.prototype, "FRONT_AND_BACK", WebGLRenderingContext.FRONT_AND_BACK);
        defineConst(WebGLRenderingContext.prototype, "FRONT_FACE", WebGLRenderingContext.FRONT_FACE);
        defineConst(WebGLRenderingContext.prototype, "FUNC_ADD", WebGLRenderingContext.FUNC_ADD);
        defineConst(WebGLRenderingContext.prototype, "FUNC_REVERSE_SUBTRACT", WebGLRenderingContext.FUNC_REVERSE_SUBTRACT);
        defineConst(WebGLRenderingContext.prototype, "FUNC_SUBTRACT", WebGLRenderingContext.FUNC_SUBTRACT);
        defineConst(WebGLRenderingContext.prototype, "GENERATE_MIPMAP_HINT", WebGLRenderingContext.GENERATE_MIPMAP_HINT);
        defineConst(WebGLRenderingContext.prototype, "GEQUAL", WebGLRenderingContext.GEQUAL);
        defineConst(WebGLRenderingContext.prototype, "GREATER", WebGLRenderingContext.GREATER);
        defineConst(WebGLRenderingContext.prototype, "GREEN_BITS", WebGLRenderingContext.GREEN_BITS);
        defineConst(WebGLRenderingContext.prototype, "HIGH_FLOAT", WebGLRenderingContext.HIGH_FLOAT);
        defineConst(WebGLRenderingContext.prototype, "HIGH_INT", WebGLRenderingContext.HIGH_INT);
        defineConst(WebGLRenderingContext.prototype, "INCR", WebGLRenderingContext.INCR);
        defineConst(WebGLRenderingContext.prototype, "INCR_WRAP", WebGLRenderingContext.INCR_WRAP);
        defineConst(WebGLRenderingContext.prototype, "INT", WebGLRenderingContext.INT);
        defineConst(WebGLRenderingContext.prototype, "INT_VEC2", WebGLRenderingContext.INT_VEC2);
        defineConst(WebGLRenderingContext.prototype, "INT_VEC3", WebGLRenderingContext.INT_VEC3);
        defineConst(WebGLRenderingContext.prototype, "INT_VEC4", WebGLRenderingContext.INT_VEC4);
        defineConst(WebGLRenderingContext.prototype, "INVALID_ENUM", WebGLRenderingContext.INVALID_ENUM);
        defineConst(WebGLRenderingContext.prototype, "INVALID_FRAMEBUFFER_OPERATION", WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION);
        defineConst(WebGLRenderingContext.prototype, "INVALID_OPERATION", WebGLRenderingContext.INVALID_OPERATION);
        defineConst(WebGLRenderingContext.prototype, "INVALID_VALUE", WebGLRenderingContext.INVALID_VALUE);
        defineConst(WebGLRenderingContext.prototype, "INVERT", WebGLRenderingContext.INVERT);
        defineConst(WebGLRenderingContext.prototype, "KEEP", WebGLRenderingContext.KEEP);
        defineConst(WebGLRenderingContext.prototype, "LEQUAL", WebGLRenderingContext.LEQUAL);
        defineConst(WebGLRenderingContext.prototype, "LESS", WebGLRenderingContext.LESS);
        defineConst(WebGLRenderingContext.prototype, "LINE_LOOP", WebGLRenderingContext.LINE_LOOP);
        defineConst(WebGLRenderingContext.prototype, "LINE_STRIP", WebGLRenderingContext.LINE_STRIP);
        defineConst(WebGLRenderingContext.prototype, "LINE_WIDTH", WebGLRenderingContext.LINE_WIDTH);
        defineConst(WebGLRenderingContext.prototype, "LINEAR", WebGLRenderingContext.LINEAR);
        defineConst(WebGLRenderingContext.prototype, "LINEAR_MIPMAP_LINEAR", WebGLRenderingContext.LINEAR_MIPMAP_LINEAR);
        defineConst(WebGLRenderingContext.prototype, "LINEAR_MIPMAP_NEAREST", WebGLRenderingContext.LINEAR_MIPMAP_NEAREST);
        defineConst(WebGLRenderingContext.prototype, "LINES", WebGLRenderingContext.LINES);
        defineConst(WebGLRenderingContext.prototype, "LINK_STATUS", WebGLRenderingContext.LINK_STATUS);
        defineConst(WebGLRenderingContext.prototype, "LOW_FLOAT", WebGLRenderingContext.LOW_FLOAT);
        defineConst(WebGLRenderingContext.prototype, "LOW_INT", WebGLRenderingContext.LOW_INT);
        defineConst(WebGLRenderingContext.prototype, "LUMINANCE", WebGLRenderingContext.LUMINANCE);
        defineConst(WebGLRenderingContext.prototype, "LUMINANCE_ALPHA", WebGLRenderingContext.LUMINANCE_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "MAX_COMBINED_TEXTURE_IMAGE_UNITS", WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
        defineConst(WebGLRenderingContext.prototype, "MAX_CUBE_MAP_TEXTURE_SIZE", WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE);
        defineConst(WebGLRenderingContext.prototype, "MAX_FRAGMENT_UNIFORM_VECTORS", WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS);
        defineConst(WebGLRenderingContext.prototype, "MAX_RENDERBUFFER_SIZE", WebGLRenderingContext.MAX_RENDERBUFFER_SIZE);
        defineConst(WebGLRenderingContext.prototype, "MAX_TEXTURE_IMAGE_UNITS", WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS);
        defineConst(WebGLRenderingContext.prototype, "MAX_TEXTURE_SIZE", WebGLRenderingContext.MAX_TEXTURE_SIZE);
        defineConst(WebGLRenderingContext.prototype, "MAX_VARYING_VECTORS", WebGLRenderingContext.MAX_VARYING_VECTORS);
        defineConst(WebGLRenderingContext.prototype, "MAX_VERTEX_ATTRIBS", WebGLRenderingContext.MAX_VERTEX_ATTRIBS);
        defineConst(WebGLRenderingContext.prototype, "MAX_VERTEX_TEXTURE_IMAGE_UNITS", WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS);
        defineConst(WebGLRenderingContext.prototype, "MAX_VERTEX_UNIFORM_VECTORS", WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS);
        defineConst(WebGLRenderingContext.prototype, "MAX_VIEWPORT_DIMS", WebGLRenderingContext.MAX_VIEWPORT_DIMS);
        defineConst(WebGLRenderingContext.prototype, "MEDIUM_FLOAT", WebGLRenderingContext.MEDIUM_FLOAT);
        defineConst(WebGLRenderingContext.prototype, "MEDIUM_INT", WebGLRenderingContext.MEDIUM_INT);
        defineConst(WebGLRenderingContext.prototype, "MIRRORED_REPEAT", WebGLRenderingContext.MIRRORED_REPEAT);
        defineConst(WebGLRenderingContext.prototype, "NEAREST", WebGLRenderingContext.NEAREST);
        defineConst(WebGLRenderingContext.prototype, "NEAREST_MIPMAP_LINEAR", WebGLRenderingContext.NEAREST_MIPMAP_LINEAR);
        defineConst(WebGLRenderingContext.prototype, "NEAREST_MIPMAP_NEAREST", WebGLRenderingContext.NEAREST_MIPMAP_NEAREST);
        defineConst(WebGLRenderingContext.prototype, "NEVER", WebGLRenderingContext.NEVER);
        defineConst(WebGLRenderingContext.prototype, "NICEST", WebGLRenderingContext.NICEST);
        defineConst(WebGLRenderingContext.prototype, "NO_ERROR", WebGLRenderingContext.NO_ERROR);
        defineConst(WebGLRenderingContext.prototype, "NONE", WebGLRenderingContext.NONE);
        defineConst(WebGLRenderingContext.prototype, "NOTEQUAL", WebGLRenderingContext.NOTEQUAL);
        defineConst(WebGLRenderingContext.prototype, "ONE", WebGLRenderingContext.ONE);
        defineConst(WebGLRenderingContext.prototype, "ONE_MINUS_CONSTANT_ALPHA", WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "ONE_MINUS_CONSTANT_COLOR", WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR);
        defineConst(WebGLRenderingContext.prototype, "ONE_MINUS_DST_ALPHA", WebGLRenderingContext.ONE_MINUS_DST_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "ONE_MINUS_DST_COLOR", WebGLRenderingContext.ONE_MINUS_DST_COLOR);
        defineConst(WebGLRenderingContext.prototype, "ONE_MINUS_SRC_ALPHA", WebGLRenderingContext.ONE_MINUS_SRC_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "ONE_MINUS_SRC_COLOR", WebGLRenderingContext.ONE_MINUS_SRC_COLOR);
        defineConst(WebGLRenderingContext.prototype, "OUT_OF_MEMORY", WebGLRenderingContext.OUT_OF_MEMORY);
        defineConst(WebGLRenderingContext.prototype, "PACK_ALIGNMENT", WebGLRenderingContext.PACK_ALIGNMENT);
        defineConst(WebGLRenderingContext.prototype, "POINTS", WebGLRenderingContext.POINTS);
        defineConst(WebGLRenderingContext.prototype, "POLYGON_OFFSET_FACTOR", WebGLRenderingContext.POLYGON_OFFSET_FACTOR);
        defineConst(WebGLRenderingContext.prototype, "POLYGON_OFFSET_FILL", WebGLRenderingContext.POLYGON_OFFSET_FILL);
        defineConst(WebGLRenderingContext.prototype, "POLYGON_OFFSET_UNITS", WebGLRenderingContext.POLYGON_OFFSET_UNITS);
        defineConst(WebGLRenderingContext.prototype, "RED_BITS", WebGLRenderingContext.RED_BITS);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER", WebGLRenderingContext.RENDERBUFFER);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_ALPHA_SIZE", WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_BINDING", WebGLRenderingContext.RENDERBUFFER_BINDING);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_BLUE_SIZE", WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_DEPTH_SIZE", WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_GREEN_SIZE", WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_HEIGHT", WebGLRenderingContext.RENDERBUFFER_HEIGHT);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_INTERNAL_FORMAT", WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_RED_SIZE", WebGLRenderingContext.RENDERBUFFER_RED_SIZE);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_STENCIL_SIZE", WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE);
        defineConst(WebGLRenderingContext.prototype, "RENDERBUFFER_WIDTH", WebGLRenderingContext.RENDERBUFFER_WIDTH);
        defineConst(WebGLRenderingContext.prototype, "RENDERER", WebGLRenderingContext.RENDERER);
        defineConst(WebGLRenderingContext.prototype, "REPEAT", WebGLRenderingContext.REPEAT);
        defineConst(WebGLRenderingContext.prototype, "REPLACE", WebGLRenderingContext.REPLACE);
        defineConst(WebGLRenderingContext.prototype, "RGB", WebGLRenderingContext.RGB);
        defineConst(WebGLRenderingContext.prototype, "RGB5_A1", WebGLRenderingContext.RGB5_A1);
        defineConst(WebGLRenderingContext.prototype, "RGB565", WebGLRenderingContext.RGB565);
        defineConst(WebGLRenderingContext.prototype, "RGBA", WebGLRenderingContext.RGBA);
        defineConst(WebGLRenderingContext.prototype, "RGBA4", WebGLRenderingContext.RGBA4);
        defineConst(WebGLRenderingContext.prototype, "SAMPLE_ALPHA_TO_COVERAGE", WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE);
        defineConst(WebGLRenderingContext.prototype, "SAMPLE_BUFFERS", WebGLRenderingContext.SAMPLE_BUFFERS);
        defineConst(WebGLRenderingContext.prototype, "SAMPLE_COVERAGE", WebGLRenderingContext.SAMPLE_COVERAGE);
        defineConst(WebGLRenderingContext.prototype, "SAMPLE_COVERAGE_INVERT", WebGLRenderingContext.SAMPLE_COVERAGE_INVERT);
        defineConst(WebGLRenderingContext.prototype, "SAMPLE_COVERAGE_VALUE", WebGLRenderingContext.SAMPLE_COVERAGE_VALUE);
        defineConst(WebGLRenderingContext.prototype, "SAMPLER_2D", WebGLRenderingContext.SAMPLER_2D);
        defineConst(WebGLRenderingContext.prototype, "SAMPLER_CUBE", WebGLRenderingContext.SAMPLER_CUBE);
        defineConst(WebGLRenderingContext.prototype, "SAMPLES", WebGLRenderingContext.SAMPLES);
        defineConst(WebGLRenderingContext.prototype, "SCISSOR_BOX", WebGLRenderingContext.SCISSOR_BOX);
        defineConst(WebGLRenderingContext.prototype, "SCISSOR_TEST", WebGLRenderingContext.SCISSOR_TEST);
        defineConst(WebGLRenderingContext.prototype, "SHADER_TYPE", WebGLRenderingContext.SHADER_TYPE);
        defineConst(WebGLRenderingContext.prototype, "SHADING_LANGUAGE_VERSION", WebGLRenderingContext.SHADING_LANGUAGE_VERSION);
        defineConst(WebGLRenderingContext.prototype, "SHORT", WebGLRenderingContext.SHORT);
        defineConst(WebGLRenderingContext.prototype, "SRC_ALPHA", WebGLRenderingContext.SRC_ALPHA);
        defineConst(WebGLRenderingContext.prototype, "SRC_ALPHA_SATURATE", WebGLRenderingContext.SRC_ALPHA_SATURATE);
        defineConst(WebGLRenderingContext.prototype, "SRC_COLOR", WebGLRenderingContext.SRC_COLOR);
        defineConst(WebGLRenderingContext.prototype, "STATIC_DRAW", WebGLRenderingContext.STATIC_DRAW);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_ATTACHMENT", WebGLRenderingContext.STENCIL_ATTACHMENT);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_FAIL", WebGLRenderingContext.STENCIL_BACK_FAIL);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_FUNC", WebGLRenderingContext.STENCIL_BACK_FUNC);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_PASS_DEPTH_FAIL", WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_PASS_DEPTH_PASS", WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_REF", WebGLRenderingContext.STENCIL_BACK_REF);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_VALUE_MASK", WebGLRenderingContext.STENCIL_BACK_VALUE_MASK);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BACK_WRITEMASK", WebGLRenderingContext.STENCIL_BACK_WRITEMASK);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BITS", WebGLRenderingContext.STENCIL_BITS);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_BUFFER_BIT", WebGLRenderingContext.STENCIL_BUFFER_BIT);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_CLEAR_VALUE", WebGLRenderingContext.STENCIL_CLEAR_VALUE);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_FAIL", WebGLRenderingContext.STENCIL_FAIL);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_FUNC", WebGLRenderingContext.STENCIL_FUNC);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_INDEX", WebGLRenderingContext.STENCIL_INDEX);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_INDEX8", WebGLRenderingContext.STENCIL_INDEX8);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_PASS_DEPTH_FAIL", WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_PASS_DEPTH_PASS", WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_REF", WebGLRenderingContext.STENCIL_REF);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_TEST", WebGLRenderingContext.STENCIL_TEST);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_VALUE_MASK", WebGLRenderingContext.STENCIL_VALUE_MASK);
        defineConst(WebGLRenderingContext.prototype, "STENCIL_WRITEMASK", WebGLRenderingContext.STENCIL_WRITEMASK);
        defineConst(WebGLRenderingContext.prototype, "STREAM_DRAW", WebGLRenderingContext.STREAM_DRAW);
        defineConst(WebGLRenderingContext.prototype, "SUBPIXEL_BITS", WebGLRenderingContext.SUBPIXEL_BITS);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE", WebGLRenderingContext.TEXTURE);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_2D", WebGLRenderingContext.TEXTURE_2D);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_BINDING_2D", WebGLRenderingContext.TEXTURE_BINDING_2D);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_BINDING_CUBE_MAP", WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP", WebGLRenderingContext.TEXTURE_CUBE_MAP);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP_NEGATIVE_X", WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP_NEGATIVE_Y", WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP_NEGATIVE_Z", WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP_POSITIVE_X", WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP_POSITIVE_Y", WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_CUBE_MAP_POSITIVE_Z", WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_MAG_FILTER", WebGLRenderingContext.TEXTURE_MAG_FILTER);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_MIN_FILTER", WebGLRenderingContext.TEXTURE_MIN_FILTER);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_WRAP_S", WebGLRenderingContext.TEXTURE_WRAP_S);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE_WRAP_T", WebGLRenderingContext.TEXTURE_WRAP_T);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE0", WebGLRenderingContext.TEXTURE0);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE1", WebGLRenderingContext.TEXTURE1);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE10", WebGLRenderingContext.TEXTURE10);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE11", WebGLRenderingContext.TEXTURE11);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE12", WebGLRenderingContext.TEXTURE12);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE13", WebGLRenderingContext.TEXTURE13);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE14", WebGLRenderingContext.TEXTURE14);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE15", WebGLRenderingContext.TEXTURE15);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE16", WebGLRenderingContext.TEXTURE16);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE17", WebGLRenderingContext.TEXTURE17);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE18", WebGLRenderingContext.TEXTURE18);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE19", WebGLRenderingContext.TEXTURE19);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE2", WebGLRenderingContext.TEXTURE2);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE20", WebGLRenderingContext.TEXTURE20);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE21", WebGLRenderingContext.TEXTURE21);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE22", WebGLRenderingContext.TEXTURE22);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE23", WebGLRenderingContext.TEXTURE23);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE24", WebGLRenderingContext.TEXTURE24);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE25", WebGLRenderingContext.TEXTURE25);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE26", WebGLRenderingContext.TEXTURE26);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE27", WebGLRenderingContext.TEXTURE27);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE28", WebGLRenderingContext.TEXTURE28);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE29", WebGLRenderingContext.TEXTURE29);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE3", WebGLRenderingContext.TEXTURE3);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE30", WebGLRenderingContext.TEXTURE30);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE31", WebGLRenderingContext.TEXTURE31);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE4", WebGLRenderingContext.TEXTURE4);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE5", WebGLRenderingContext.TEXTURE5);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE6", WebGLRenderingContext.TEXTURE6);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE7", WebGLRenderingContext.TEXTURE7);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE8", WebGLRenderingContext.TEXTURE8);
        defineConst(WebGLRenderingContext.prototype, "TEXTURE9", WebGLRenderingContext.TEXTURE9);
        defineConst(WebGLRenderingContext.prototype, "TRIANGLE_FAN", WebGLRenderingContext.TRIANGLE_FAN);
        defineConst(WebGLRenderingContext.prototype, "TRIANGLE_STRIP", WebGLRenderingContext.TRIANGLE_STRIP);
        defineConst(WebGLRenderingContext.prototype, "TRIANGLES", WebGLRenderingContext.TRIANGLES);
        defineConst(WebGLRenderingContext.prototype, "UNPACK_ALIGNMENT", WebGLRenderingContext.UNPACK_ALIGNMENT);
        defineConst(WebGLRenderingContext.prototype, "UNPACK_COLORSPACE_CONVERSION_WEBGL", WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL);
        defineConst(WebGLRenderingContext.prototype, "UNPACK_FLIP_Y_WEBGL", WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL);
        defineConst(WebGLRenderingContext.prototype, "UNPACK_PREMULTIPLY_ALPHA_WEBGL", WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL);
        defineConst(WebGLRenderingContext.prototype, "UNSIGNED_BYTE", WebGLRenderingContext.UNSIGNED_BYTE);
        defineConst(WebGLRenderingContext.prototype, "UNSIGNED_INT", WebGLRenderingContext.UNSIGNED_INT);
        defineConst(WebGLRenderingContext.prototype, "UNSIGNED_SHORT", WebGLRenderingContext.UNSIGNED_SHORT);
        defineConst(WebGLRenderingContext.prototype, "UNSIGNED_SHORT_4_4_4_4", WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4);
        defineConst(WebGLRenderingContext.prototype, "UNSIGNED_SHORT_5_5_5_1", WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1);
        defineConst(WebGLRenderingContext.prototype, "UNSIGNED_SHORT_5_6_5", WebGLRenderingContext.UNSIGNED_SHORT_5_6_5);
        defineConst(WebGLRenderingContext.prototype, "VALIDATE_STATUS", WebGLRenderingContext.VALIDATE_STATUS);
        defineConst(WebGLRenderingContext.prototype, "VENDOR", WebGLRenderingContext.VENDOR);
        defineConst(WebGLRenderingContext.prototype, "VERSION", WebGLRenderingContext.VERSION);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_ENABLED", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_NORMALIZED", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_POINTER", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_SIZE", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_STRIDE", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_ATTRIB_ARRAY_TYPE", WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE);
        defineConst(WebGLRenderingContext.prototype, "VERTEX_SHADER", WebGLRenderingContext.VERTEX_SHADER);
        defineConst(WebGLRenderingContext.prototype, "VIEWPORT", WebGLRenderingContext.VIEWPORT);
        defineConst(WebGLRenderingContext.prototype, "ZERO", WebGLRenderingContext.ZERO);

        export class Canvas extends Element implements IHTMLCanvasElement {
            /**
              * Gets or sets the width of a canvas element on a document.
              */
            width: number;
            /**
              * Gets or sets the height of a canvas element on a document.
              */
            height: number;
            /**
              * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.
              * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.
              */
            toDataURL(type?: string, ...args: any[]): string;
            /**
              * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.
              * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext("2d"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext("experimental-webgl");
              */
            getContext(contextId: "2d"): ICanvasRenderingContext2D;
            getContext(contextId: "experimental-webgl"): IWebGLRenderingContext;
            getContext(contextId: string, ...args: any[]): any;
            /**
              * Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.
              */
            msToBlob(): Blob;
        }
    }
}
